{"version":3,"sources":["components/Card.js","components/Input.js","components/Label.js","components/Slider.js","components/Select.js","components/Toggle.js","utils/calculations.js","CyprusApartmentInvestmentCalculator.js","App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","children","className","React","createElement","CardHeader","_ref2","CardContent","_ref3","CardTitle","_ref4","Input","props","Label","htmlFor","Slider","id","min","max","step","value","onValueChange","type","onChange","e","parseFloat","target","Select","SelectTrigger","SelectContent","SelectItem","SelectValue","_ref5","placeholder","Toggle","checked","formatNumber","num","Intl","NumberFormat","format","Math","round","calculateRentalYield","monthlyRent","totalPrice","calculateReturns","params","upfrontPercentage","constructionMonths","appreciationRate","years","occupancyRate","monthlyManagementFee","transferTaxRate","vatRate","israeliTaxRate","isNewApartment","upfrontPayment","monthlyPayment","totalInvestment","i","currentValue","totalRentalIncome","totalManagementFees","totalVatReturns","totalIsraeliTax","transferTax","rentalYears","yearlyRent","yearlyManagementFee","yearlyVatReturn","totalAppreciation","totalReturn","finalValue","roi","SliderWithValue","label","unit","newValue","ApartmentInvestmentCalculator","propertyDetails","setPropertyDetails","useState","investmentParams","setInvestmentParams","handlePropertyChange","key","prevState","[object Object]","handleInvestmentChange","results","useMemo","rentalYield","Number","toString","map","months","toFixed","Array","_","App","CyprusApartmentInvestmentCalculator","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f8212517.chunk.js","sourcesContent":["import React from 'react'; // Add this line\r\n\r\nfunction Card({ children, className }) {\r\n  return <div className={`card ${className}`}>{children}</div>;\r\n}\r\n\r\nfunction CardHeader({ children }) {\r\n  return <div className=\"card-header\">{children}</div>;\r\n}\r\n\r\nfunction CardContent({ children }) {\r\n  return <div className=\"card-content\">{children}</div>;\r\n}\r\n\r\nfunction CardTitle({ children }) {\r\n  return <h2 className=\"card-title\">{children}</h2>;\r\n}\r\n\r\nexport { Card, CardHeader, CardContent, CardTitle };","import React from 'react'; // Add this line\r\n\r\nfunction Input(props) {\r\n  return <input {...props} />;\r\n}\r\n\r\nexport { Input };","import React from 'react'; // Add this line\r\n\r\nfunction Label({ children, htmlFor }) {\r\n  return <label htmlFor={htmlFor}>{children}</label>;\r\n}\r\n\r\nexport { Label };","import React from 'react'; // Add this line\r\n\r\nfunction Slider({ id, min, max, step, value, onValueChange }) {\r\n  return (\r\n    <input\r\n      type=\"range\"\r\n      id={id}\r\n      min={min}\r\n      max={max}\r\n      step={step}\r\n      value={value[0]}\r\n      onChange={(e) => onValueChange([parseFloat(e.target.value)])}\r\n    />\r\n  );\r\n}\r\n\r\nexport { Slider };","import React from 'react'; // Add this line\r\n\r\nfunction Select({ value, onValueChange, children }) {\r\n  return (\r\n    <select value={value} onChange={(e) => onValueChange(e.target.value)}>\r\n      {children}\r\n    </select>\r\n  );\r\n}\r\n\r\nfunction SelectTrigger({ children, className }) {\r\n  return <div className={`select-trigger ${className}`}>{children}</div>;\r\n}\r\n\r\nfunction SelectContent({ children }) {\r\n  return <div className=\"select-content\">{children}</div>;\r\n}\r\n\r\nfunction SelectItem({ value, children }) {\r\n  return <option value={value}>{children}</option>;\r\n}\r\n\r\nfunction SelectValue({ placeholder }) {\r\n  return <span>{placeholder}</span>;\r\n}\r\n\r\nexport { Select, SelectTrigger, SelectContent, SelectItem, SelectValue };","import React from 'react'; // Add this line\r\n// import './Toggle.css';\r\n\r\nconst Toggle = ({ id, checked, onChange }) => {\r\n  return (\r\n    <div className=\"flex items-center\">\r\n      <input\r\n        type=\"checkbox\"\r\n        id={id}\r\n        checked={checked}\r\n        onChange={(e) => onChange(e.target.checked)}\r\n        className=\"toggle-checkbox\"\r\n      />\r\n      <label htmlFor={id} className=\"toggle-label\">\r\n        <span className=\"toggle-button\" />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport {Toggle};","export const formatNumber = (num) => new Intl.NumberFormat('en-US').format(Math.round(num));\r\n\r\nexport const calculateRentalYield = (monthlyRent, totalPrice) => {\r\n  const annualRent = monthlyRent * 12;\r\n  return (annualRent / totalPrice) * 100;\r\n};\r\n\r\nexport const calculateReturns = (params) => {\r\n  const { totalPrice, upfrontPercentage, constructionMonths, appreciationRate, years, occupancyRate, monthlyRent, monthlyManagementFee, transferTaxRate, vatRate, israeliTaxRate, isNewApartment } = params;\r\n\r\n  const upfrontPayment = totalPrice * (upfrontPercentage / 100);\r\n  const remainingPayment = totalPrice - upfrontPayment;\r\n  const monthlyPayment = remainingPayment / constructionMonths;\r\n\r\n  let totalInvestment = upfrontPayment;\r\n  for (let i = 1; i <= constructionMonths; i++) {\r\n    totalInvestment += monthlyPayment;\r\n  }\r\n\r\n  let currentValue = totalPrice;\r\n  let totalRentalIncome = 0;\r\n  let totalManagementFees = 0;\r\n  let totalVatReturns = 0;\r\n  let totalIsraeliTax = 0;\r\n  let transferTax = 0;\r\n\r\n  const rentalYears = Math.max(0, years - (constructionMonths / 12));\r\n\r\n  for (let i = 0; i < rentalYears; i++) {\r\n    const yearlyRent = monthlyRent * 12 * (occupancyRate / 100);\r\n    const yearlyManagementFee = monthlyManagementFee * 12;\r\n    const yearlyVatReturn = (yearlyRent * (vatRate / 100)) / (1 + vatRate / 100);\r\n    const yearlyIsraeliTax = (yearlyRent - yearlyManagementFee) * (israeliTaxRate / 100);\r\n    totalRentalIncome += yearlyRent;\r\n    totalManagementFees += yearlyManagementFee;\r\n    totalIsraeliTax += yearlyIsraeliTax;\r\n    if (i > 0) { // VAT returns start from the second year\r\n      totalVatReturns += yearlyVatReturn;\r\n    }\r\n    currentValue *= (1 + appreciationRate / 100);\r\n  }\r\n\r\n  if (!isNewApartment) {\r\n    transferTax = totalPrice * (transferTaxRate / 100);\r\n    totalInvestment += transferTax;\r\n  }\r\n\r\n  const totalAppreciation = currentValue - totalPrice;\r\n  const totalReturn = totalRentalIncome + totalAppreciation + totalVatReturns - totalManagementFees - totalIsraeliTax;\r\n  const roi = (totalReturn / totalInvestment) * 100;\r\n\r\n  return {\r\n    upfrontPayment,\r\n    monthlyPayment,\r\n    totalInvestment,\r\n    finalValue: currentValue,\r\n    totalRentalIncome,\r\n    totalManagementFees,\r\n    totalVatReturns,\r\n    totalIsraeliTax,\r\n    totalAppreciation,\r\n    totalReturn,\r\n    roi,\r\n    transferTax\r\n  };\r\n};","import React, { useState, useMemo } from 'react';\r\nimport { Card, CardHeader, CardContent, CardTitle } from './components/Card';\r\nimport { Input } from './components/Input';\r\nimport { Label } from './components/Label';\r\nimport { Slider } from './components/Slider';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './components/Select';\r\nimport { Toggle } from './components/Toggle'; // Assuming you have a Toggle component\r\nimport { formatNumber, calculateRentalYield, calculateReturns } from './utils/calculations';\r\n\r\nconst SliderWithValue = ({ label, id, value, min, max, step, onChange, unit = '%' }) => (\r\n  <div className=\"flex flex-col space-y-1.5\">\r\n    <Label htmlFor={id}>\r\n      {label} <span className=\"font-bold\">{value}{unit}</span>\r\n    </Label>\r\n    <Slider \r\n      id={id} \r\n      min={min} \r\n      max={max} \r\n      step={step} \r\n      value={[value]} \r\n      onValueChange={([newValue]) => onChange(newValue)}\r\n    />\r\n  </div>\r\n);\r\nexport default ApartmentInvestmentCalculator;\r\n\r\nexport function ApartmentInvestmentCalculator() {\r\n  const [propertyDetails, setPropertyDetails] = useState({\r\n    totalPrice: 300000,\r\n    upfrontPercentage: 30,\r\n    constructionMonths: 24,\r\n  });\r\n\r\n  const [investmentParams, setInvestmentParams] = useState({\r\n    appreciationRate: 3,\r\n    years: 7,\r\n    occupancyRate: 100,\r\n    monthlyRent: 1000,\r\n    monthlyManagementFee: 100,\r\n    transferTaxRate: 8,\r\n    vatRate: 19,\r\n    israeliTaxRate: 15,\r\n    isNewApartment: true,\r\n  });\r\n\r\n  const handlePropertyChange = (key, value) => {\r\n    setPropertyDetails(prevState => ({\r\n      ...prevState,\r\n      [key]: value\r\n    }));\r\n  };\r\n\r\n  const handleInvestmentChange = (key, value) => {\r\n    setInvestmentParams(prevState => ({\r\n      ...prevState,\r\n      [key]: value\r\n    }));\r\n  };\r\n\r\n  const results = useMemo(() => calculateReturns({ ...propertyDetails, ...investmentParams }), [propertyDetails, investmentParams]);\r\n  const rentalYield = useMemo(() => calculateRentalYield(investmentParams.monthlyRent, propertyDetails.totalPrice), [investmentParams.monthlyRent, propertyDetails.totalPrice]);\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <Card className=\"bg-gradient-to-r from-blue-500 to-purple-500 text-white\">\r\n        <CardHeader>\r\n          <CardTitle className=\"text-3xl font-bold\">Cyprus Apartment Investment Calculator for Israeli Investors</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-6\">\r\n            <div>\r\n              <h3 className=\"text-xl font-semibold mb-2 border-b-2 pb-2\">Property Details</h3>\r\n              <div className=\"grid grid-cols-3 gap-4\">\r\n                <div className=\"flex flex-col space-y-1.5\">\r\n                  <Label htmlFor=\"totalPrice\">Total Apartment Price (€)</Label>\r\n                  <Input id=\"totalPrice\" value={propertyDetails.totalPrice} onChange={(e) => handlePropertyChange('totalPrice', Number(e.target.value))} className=\"bg-white text-black\" />\r\n                </div>\r\n                <SliderWithValue\r\n                  label=\"Upfront Payment\"\r\n                  id=\"upfrontPercentage\"\r\n                  value={propertyDetails.upfrontPercentage}\r\n                  min={0}\r\n                  max={100}\r\n                  step={1}\r\n                  onChange={(value) => handlePropertyChange('upfrontPercentage', value)}\r\n                />\r\n                <div className=\"flex flex-col space-y-1.5\">\r\n                  <Label htmlFor=\"constructionMonths\">Construction Period</Label>\r\n                  <Select value={propertyDetails.constructionMonths.toString()} onValueChange={(value) => handlePropertyChange('constructionMonths', Number(value))}>\r\n                    {[12, 24, 36, 48, 60].map((months) => (\r\n                      <option key={months} value={months.toString()}>{months / 12} years</option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <h3 className=\"text-xl font-semibold mb-2 border-b-2 pb-2\">Investment Parameters</h3>\r\n              <div className=\"grid grid-cols-3 gap-4\">\r\n                <div className=\"flex flex-col space-y-1.5\">\r\n                  <Label>Annual Rental Yield</Label>\r\n                  <div className=\"font-bold\">{rentalYield.toFixed(2)}%</div>\r\n                </div>\r\n                <SliderWithValue\r\n                  label=\"Annual Appreciation Rate\"\r\n                  id=\"appreciationRate\"\r\n                  value={investmentParams.appreciationRate}\r\n                  min={0}\r\n                  max={10}\r\n                  step={0.1}\r\n                  onChange={(value) => handleInvestmentChange('appreciationRate', value)}\r\n                />\r\n                <div className=\"flex flex-col space-y-1.5\">\r\n                  <Label htmlFor=\"years\">Investment Period (Years)</Label>\r\n                  <Select value={investmentParams.years.toString()} onValueChange={(value) => handleInvestmentChange('years', Number(value))}>\r\n                    <SelectTrigger className=\"bg-white text-black\">\r\n                      <SelectValue placeholder=\"Select period\" />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      {[...Array(20)].map((_, i) => (\r\n                        <SelectItem key={i+1} value={(i+1).toString()}>{i+1} years</SelectItem>\r\n                      ))}\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <h3 className=\"text-xl font-semibold mb-2 border-b-2 pb-2\">Rental Details</h3>\r\n              <div className=\"grid grid-cols-3 gap-4\">\r\n                <div className=\"flex flex-col space-y-1.5\">\r\n                  <Label htmlFor=\"occupancyRate\">Annual Occupancy Rate (%)</Label>\r\n                  <Input \r\n                    id=\"occupancyRate\" \r\n                    type=\"number\" \r\n                    value={investmentParams.occupancyRate} \r\n                    onChange={(e) => handleInvestmentChange('occupancyRate', Number(e.target.value))}\r\n                    min={0}\r\n                    max={100}\r\n                    step={0.1}\r\n                    className=\"bg-white text-black\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex flex-col space-y-1.5\">\r\n                  <Label htmlFor=\"monthlyRent\">Estimated Monthly Rent (€)</Label>\r\n                  <Input \r\n                    id=\"monthlyRent\" \r\n                    type=\"number\"\r\n                    value={investmentParams.monthlyRent} \r\n                    onChange={(e) => handleInvestmentChange('monthlyRent', Number(e.target.value))} \r\n                    className=\"bg-white text-black\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex flex-col space-y-1.5\">\r\n                  <Label htmlFor=\"monthlyManagementFee\">Monthly Management Fee (€)</Label>\r\n                  <Input \r\n                    id=\"monthlyManagementFee\" \r\n                    type=\"number\"\r\n                    value={investmentParams.monthlyManagementFee} \r\n                    onChange={(e) => handleInvestmentChange('monthlyManagementFee', Number(e.target.value))} \r\n                    className=\"bg-white text-black\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <h3 className=\"text-xl font-semibold mb-2 border-b-2 pb-2\">Taxes</h3>\r\n              <div className=\"grid grid-cols-3 gap-4\">\r\n                <div className=\"flex flex-col space-y-1.5\">\r\n                  <Label>New Apartment</Label>\r\n                  <Toggle \r\n                    id=\"isNewApartment\" \r\n                    checked={investmentParams.isNewApartment} \r\n                    onChange={(checked) => handleInvestmentChange('isNewApartment', checked)} \r\n                  />\r\n                </div>\r\n                {investmentParams.isNewApartment ? (\r\n                  <div className=\"flex flex-col space-y-1.5\">\r\n                    <Label>VAT Rate</Label>\r\n                    <div className=\"font-bold\">{investmentParams.vatRate}%</div>\r\n                  </div>\r\n                ) : (\r\n                  <SliderWithValue\r\n                    label=\"Transfer Tax Rate\"\r\n                    id=\"transferTaxRate\"\r\n                    value={investmentParams.transferTaxRate}\r\n                    min={0}\r\n                    max={15}\r\n                    step={0.1}\r\n                    onChange={(value) => handleInvestmentChange('transferTaxRate', value)}\r\n                  />\r\n                )}\r\n                <div className=\"flex flex-col space-y-1.5\">\r\n                  <Label>Israeli Tax Rate</Label>\r\n                  <div className=\"font-bold\">{investmentParams.israeliTaxRate}%</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card className=\"bg-gradient-to-r from-green-500 to-teal-500 text-white\">\r\n        <CardHeader>\r\n          <CardTitle className=\"text-3xl font-bold\">Investment Returns for {investmentParams.years} Years</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <h3 className=\"text-xl font-semibold mb-2 border-b-2 pb-2\">Initial Costs</h3>\r\n              <div className=\"grid grid-cols-3 gap-4\">\r\n                <div>Upfront Payment: €{formatNumber(results.upfrontPayment)}</div>\r\n                <div>Monthly Contractor Return Payment: €{formatNumber(results.monthlyPayment)}</div>\r\n                <div>Transfer Tax: €{formatNumber(results.transferTax)}</div>\r\n                <div>VAT: €{formatNumber(propertyDetails.totalPrice * investmentParams.vatRate / 100)}</div>\r\n              </div>\r\n            </div>\r\n            <hr className=\"border-t-2 border-white\" />\r\n            <div>\r\n              <h3 className=\"text-xl font-semibold mb-2 border-b-2 pb-2\">Investment Overview</h3>\r\n              <div className=\"grid grid-cols-3 gap-4\">\r\n                <div>Total Investment: €{formatNumber(results.totalInvestment)}</div>\r\n                <div>Total Investment Inc. VAT: €{formatNumber(results.totalInvestment + (propertyDetails.totalPrice * investmentParams.vatRate / 100))}</div>\r\n                <div>Final Property Value: €{formatNumber(results.finalValue)}</div>\r\n                <div>Total Appreciation: €{formatNumber(results.totalAppreciation)}</div>\r\n              </div>\r\n            </div>\r\n            <hr className=\"border-t-2 border-white\" />\r\n            <div>\r\n              <h3 className=\"text-xl font-semibold mb-2 border-b-2 pb-2\">Rental Income and Expenses</h3>\r\n              <div className=\"grid grid-cols-3 gap-4\">\r\n                <div>Total Rental Income: €{formatNumber(results.totalRentalIncome)}</div>\r\n                <div>Management Fees: €{formatNumber(results.totalManagementFees)}</div>\r\n                <div>VAT Returns: €{formatNumber(results.totalVatReturns)}</div>\r\n              </div>\r\n            </div>\r\n            <hr className=\"border-t-2 border-white\" />\r\n            <div>\r\n              <h3 className=\"text-xl font-semibold mb-2 border-b-2 pb-2\">Taxes and Returns</h3>\r\n              <div className=\"grid grid-cols-3 gap-4\">\r\n                <div>Israeli Tax: €{formatNumber(results.totalIsraeliTax)}</div>\r\n                <div>Total Return: €{formatNumber(results.totalReturn)}</div>\r\n                <div>ROI: {results.roi.toFixed(2)}%</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}","import React from 'react'; // Add this line\nimport './App.css';\nimport CyprusApartmentInvestmentCalculator from './CyprusApartmentInvestmentCalculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Cyprus Apartment Investment Calculator</h1>\n      </header>\n      <main>\n        <CyprusApartmentInvestmentCalculator />\n      </main>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}